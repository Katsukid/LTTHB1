@model SinhVien.Entities.SINHVIEN


     @using (Html.BeginForm("Create", "SINHVIENs", FormMethod.Post, new { @id = "create_form" }))
     {
          @Html.AntiForgeryToken()
          <div class="form-horizontal container-fluid">
               @Html.ValidationSummary(true, "", new { @class = "text-danger" })
               <div class="row">
                    <div class="col-6">
                         <div class="form-group row">
                              <div class="col-3">
                                   @Html.LabelFor(model => model.MA, htmlAttributes: new { @class = "control-label " })
                              </div>
                              <div class="col-9">
                                   @Html.EditorFor(model => model.MA, new { htmlAttributes = new { @class = "form-control" } })
                                   @Html.ValidationMessageFor(model => model.MA, "", new { @class = "text-danger" })
                              </div>
                         </div>

                         <div class="form-group row">
                              <div class="col-3">
                                   @Html.LabelFor(model => model.HOTEN, htmlAttributes: new { @class = "control-label" })
                              </div>
                              <div class="col-9">
                                   @Html.EditorFor(model => model.HOTEN, new { htmlAttributes = new { @class = "form-control" } })
                                   @Html.ValidationMessageFor(model => model.HOTEN, "", new { @class = "text-danger" })
                              </div>
                         </div>

                         <div class="form-group row">
                              <div class="col-3">
                                   @Html.LabelFor(model => model.NGAYSINH, htmlAttributes: new { @class = "control-label " })
                              </div>
                              <div class="col-9">
                                   @if (Model == null)
                                   {
                                        @Html.EditorFor(model => model.NGAYSINH, new { htmlAttributes = new { @class = "form-control" } })
                                   }
                                   else
                                   {
                                   <input class="form-control text-box single-line" data-val="true" data-val-date="The field Ngày sinh must be a date." data-val-required="The Ngày sinh field is required." id="NGAYSINH" name="NGAYSINH" type="datetime" value=@Model.NGAYSINH.ToShortDateString()>
                                   }
                                   @Html.ValidationMessageFor(model => model.NGAYSINH, "", new { @class = "text-danger" })
                              </div>
                         </div>
                    </div>
                    <div class="col-6">
                         <div class="form-group row">
                              <div class="col-3">
                                   @Html.LabelFor(model => model.QUEQUAN, htmlAttributes: new { @class = "control-label " })
                              </div>
                              <div class="col-9">
                                   @Html.EditorFor(model => model.QUEQUAN, new { htmlAttributes = new { @class = "form-control" } })
                                   @Html.ValidationMessageFor(model => model.QUEQUAN, "", new { @class = "text-danger" })
                              </div>
                         </div>

                         <div class="form-group row">
                              <div class="col-3">
                                   @Html.LabelFor(model => model.DANTOC, "Dân tộc", htmlAttributes: new { @class = "control-label " })
                              </div>
                              <div class="col-9">
                                   @Html.DropDownList("DANTOC", null, htmlAttributes: new { @class = "form-control" })
                                   @Html.ValidationMessageFor(model => model.DANTOC, "", new { @class = "text-danger" })
                              </div>
                         </div>

                         <div class="form-group row">
                              <div class="col-3">
                                   @Html.LabelFor(model => model.LOP, "Lớp", htmlAttributes: new { @class = "control-label " })
                              </div>
                              <div class="col-9">
                                   @Html.DropDownList("LOP", null, htmlAttributes: new { @class = "form-control" })
                                   @Html.ValidationMessageFor(model => model.LOP, "", new { @class = "text-danger" })
                              </div>
                         </div>
                    </div>
               </div>
               

               

               <div class="form-group container">
                    <div class="row">
                         <div class="col-4">
                              <input id="createBtn" type="submit" value="Tạo mới" class="btn btn-success" />
                         </div>
                         <div class="col-4">
                              <input id="saveChangeBtn" type="submit" value="Sửa" class="btn btn-info" data-toggle="modal" data-target="#editModal"/>
                         </div>
                         <div class="col-4">
                              <input id="cancelBtn" type="reset" value="Hủy" class="btn btn-danger" />
                         </div>
                    </div>                    
               </div>
          </div>
     }

<script>
     createEvent.init();
     cancelEvent.init();
     saveChangeEvent.init();
</script>